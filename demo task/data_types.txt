Q1. Consider the following code:
let str = "Hello";
str.test = 5;
alert(str.test);
How do you think, will it work? What will be shown?
    Sol:
let str = "Hello";

str.test = 5; // (*)

alert(str.test);


Q2. Create a script that prompts the visitor to enter two numbers and then shows their sum.
    Sol:
let a = +prompt("The first number?", "");
let b = +prompt("The second number?", "");

alert( a + b );


Q3. According to the documentation Math.round and toFixed both round to the nearest number: 0..4 lead down while 5..9 lead up.
For instance:
alert( 1.35.toFixed(1) ); 
In the similar example below, why is 6.35 rounded to 6.3, not 6.4?
alert( 6.35.toFixed(1) ); 
How to round 6.35 the right way?
    Sol:
The decimal fraction is 6.35


Q4. Create a function readNumber which prompts for a number until the visitor enters a valid numeric value.
The resulting value must be returned as a number.
The visitor can also stop the process by entering an empty line or pressing “CANCEL”. In that case, the function should return null.
    Sol:
function readNumber() {
  let num;

  do {
    num = prompt("Enter a number please?", 0);
  } while ( !isFinite(num) );

  if (num === null || num === '') return null;

  return +num;
}

alert(`Read: ${readNumber()}`);


Q5. This loop is infinite. It never ends. Why?
let i = 0;
while (i != 10) {
  i += 0.2;
}
    Sol:
Because i would never be equal to  10


Q6. The built-in function Math.random() creates a random value from 0 to 1 (not including 1).
Write the function random(min, max) to generate a random floating-point number from min to max (not including max).
Examples of its work:
alert( random(1, 5) ); 
alert( random(1, 5) ); 
alert( random(1, 5) ); 
    Sol:
function random(min, max) {
  return min + Math.random() * (max - min);
}

alert( random(1, 5) );
alert( random(1, 5) );
alert( random(1, 5) );


Q7. Create a function randomInteger(min, max) that generates a random integer number from min to max including both min and max as possible values.
Any number from the interval min..max must appear with the same probability.
Examples of its work:
alert( randomInteger(1, 5) );
alert( randomInteger(1, 5) );
alert( randomInteger(1, 5) );
    Sol:
function randomInteger(min, max) {
  let rand = min - 0.5 + Math.random() * (max - min + 1);
  return Math.round(rand);
}

alert( randomInteger(1, 3) );


Q8. Write a function ucFirst(str) that returns the string str with the uppercased first character, for instance:
ucFirst("john") == "John";
    Sol:
function ucFirst(str) {
  if (!str) return str;

  return str[0].toUpperCase() + str.slice(1);
}

alert( ucFirst("john") );
