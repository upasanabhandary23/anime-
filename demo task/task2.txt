Q1. What is the last value alerted by this code? Why?
let i = 3;
while (i) {
  alert( i-- );
}
sol: 3
     2
     1

Q2. For every loop iteration, write down which value it outputs and then compare it with the solution.
Both loops alert the same values, or not?
i)
The prefix form ++i:
let i = 0;
while (++i < 5) alert( i );
ii)
The postfix form i++
let i = 0;
while (i++ < 5) alert( i );
sol: i) 1
        2
        3
        4
    ii) 1
        2
        3
        4
        5

Q3. For each loop write down which values it is going to show. Then compare with the answer.
Both loops alert same values or not?
i)
The postfix form:
for (let i = 0; i < 5; i++) alert( i );
ii)
The prefix form:
for (let i = 0; i < 5; ++i) alert( i );
sol: i) 0
        1
        2
        3
        4
    ii) 0
        1
        2
        4

Q4. Use the for loop to output even numbers from 2 to 10.
sol:
for (let i = 2; i <= 10; i++) {
  if (i % 2 == 0) {
    alert( i );
  }
}

Q5. Rewrite the code changing the for loop to while without altering its behavior (the output should stay same).
for (let i = 0; i < 3; i++) {
  alert( `number ${i}!` );
}
sol:
let i = 0;
while (i < 3) {
  alert( `number ${i}!` );
  i++;
}

Q6. Write a loop which prompts for a number greater than 100. If the visitor enters another number – ask them to input again.
The loop must ask for a number until either the visitor enters a number greater than 100 or cancels the input/enters an empty line.
Here we can assume that the visitor only inputs numbers. There’s no need to implement a special handling for a non-numeric input in this task.
sol:
let num;
do {
  num = prompt("Enter a number greater than 100?", 0);
} while (num <= 100 && num);

Q7. An integer number greater than 1 is called a prime if it cannot be divided without a remainder by anything except 1 and itself.
In other words, n > 1 is a prime if it can’t be evenly divided by anything except 1 and n.
For example, 5 is a prime, because it cannot be divided without a remainder by 2, 3 and 4.
Write the code which outputs prime numbers in the interval from 2 to n.
For n = 10 the result will be 2,3,5,7.
sol:
let n = 10;
nextPrime:
for (let i = 2; i <= n; i++) {
  for (let j = 2; j < i; j++) { 
    if (i % j == 0) continue nextPrime; 
  }

  alert( i ); // a prime
}
